library(fpp)
temp<-c(7.6,7.1,8.3,11.5,13.7,17.2,18.5,19.7,15.1,8.9,8.5,8.5,7.7,6.9,6.1,10.5,12.9)
ts.temp<-ts(temp, start=2014, frequency = 12)
print(ts.temp)
#Returning start, end and frequency
start(ts.temp)
frequency(ts.temp)
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Months", ylab= "Temperatures")
abline (h = ts.temp), col='light green')
abline (h = ts.temp), col='grey')
abline (h = ts.temp), col="grey")
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Months", ylab= "Temperatures")
abline (h = ts.temp), col="grey")
abline(h = ts.temp), col="grey")
abline(h=mean(ts.temp), col="grey")
abline(h=mean(ts.temp), col="lightgreen")
abline(h=mean(ts.temp), col="darkgreen")
View(ts.temp)
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Months", ylab= "Temperatures", y = "Years")
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Months", ylab= "Temperatures")
abline(h=mean(ts.temp), col=#5d666d)
abline(h=mean(ts.temp), col='#5d666d')
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  )
abline(h=mean(ts.temp), col='#5d666d')
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  )
abline(h=mean(ts.temp), col='#c0d630')
abline(h=mean(ts.temp), col='#c0d630', lty=2 )
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  )
abline(h=mean(ts.temp), col='#c0d630', lty=2 )
abline(h=mean(ts.temp), col='#c0d630', lty=3 )
abline(h=mean(ts.temp), col='#c0d630', lty=5 )
abline(h=mean(ts.temp), col='#c0d630', lty=6 )
abline(h=mean(ts.temp), col='#c0d630', lty=10 )
abline(h=mean(ts.temp), col='#c0d630', asp=1  )
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  )
abline(h=mean(ts.temp), col='#c0d630', asp=1  )
abline(h=mean(ts.temp), col='#c0d630', asp=5  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2, label="Mean"  )
top_label<-paste("Mean Temperature = ", format(max(ts.temp), digits=2), sep="")
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2, label="Mean"  )
top_label<-paste("Mean Temperature = ", format(max(ts.temp), digits=2), sep="")
text(max(ts.temp), top_label, pos=2)
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  )
top_label<-paste("Mean Temperature = ", format(max(ts.temp), digits=2), sep="")
abline(h=mean(ts.temp), col='#c0d630', lwd=2, label="Mean"  )
text(max(ts.temp), top_label, pos=2)
title("Plot of Temperature")
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures", grid=TRUE  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2, label="Mean"  )
title("Plot of Temperature")
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures", grid=TRUE, col.grid = "lightgray"  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2, label="Mean"  )
title("Plot of Temperature")
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  useSmoothScatter = FALSE  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2, label="Mean"  )
title("Plot of Temperature")
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  useSmoothScatter = TRUE  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2, label="Mean"  )
title("Plot of Temperature")
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  useSmoothScatter = TRUE, connectPoints = FALSE  )
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  useSmoothScatter = TRUE, connectPoints = TRUE  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2, label="Mean"  )
title("Plot of Temperature")
plot.TS(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  useSmoothScatter = TRUE, connectPoints = TRUE  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2, label="Mean"  )
title("Plot of Temperature")
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  useSmoothScatter = TRUE, connectPoints = TRUE  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2, label="Mean"  )
title("Plot of Temperature")
text(max(ts.temp), min(ts.temp), top_label, pos=2)
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  useSmoothScatter = TRUE, connectPoints = TRUE  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2, label="Mean"  )
text(max(ts.temp), min(ts.temp), top_label, pos=2)
title("Plot of Temperature")
text(max(ts.temp), max(ts.temp), top_label, pos=2)
title("Plot of Temperature")
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  useSmoothScatter = TRUE, connectPoints = TRUE  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2, label="Mean"  )
text<-c("Seasonal naive method")
legend("center",text,col=4,lty=1,ncol=1,cex=0.8,lwd=3)
title("Plot of Temperature")
legend("center",text,col=4,lty=1,ncol=1,cex=0.8,lwd=2)
legend("right",text,col=4,lty=1,ncol=1,cex=0.8,lwd=2)
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  useSmoothScatter = TRUE, connectPoints = TRUE  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2, label="Mean"  )
text<-c("Seasonal naive method")
legend("right",text,col="#c0d630",lty=1,ncol=1,cex=0.8,lwd=2)
title("Plot of Temperature")
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  useSmoothScatter = TRUE, connectPoints = TRUE  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2, label="Mean"  )
text<-c("Average Temperature")
legend("right",text,col="#c0d630",lty=1,ncol=1,cex=0.8,lwd=2)
title("Plot of Temperature")
legend("right",text,col="#c0d630",lty=1,ncol=0.1,cex=0.8,lwd=2)
legend("right",text,col="#c0d630",lty=1,ncol=1,cex=0.8,lwd=2)
legend("right",text,col="#c0d630",lty=1,ncol=1,cex=0.3,lwd=2)
title("Plot of Temperature")
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  useSmoothScatter = TRUE, connectPoints = TRUE  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2, label="Mean"  )
text<-c("Average Temperature")
legend("right",text,col="#c0d630",lty=1,ncol=1,cex=0.3,lwd=2)
legend("right",text,col="#c0d630",lty=1,ncol=1,cex=0.4,lwd=2)
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  useSmoothScatter = TRUE, connectPoints = TRUE  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2, label="Mean"  )
text<-c("Average Temperature")
legend("right",text,col="#c0d630",lty=1,ncol=1,cex=0.4,lwd=2)
legend("right",text,col="#c0d630",lty=1,ncol=1,cex=0.5,lwd=2)
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  useSmoothScatter = TRUE, connectPoints = TRUE  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2, label="Mean"  )
text<-c("Average Temperature")
legend("right",text,col="#c0d630",lty=1,ncol=1,cex=0.5,lwd=2)
title("Plot of Temperature")
legend("right",text,col="#c0d630",lty=1,ncol=1,cex=0.8,lwd=2)
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  useSmoothScatter = TRUE, connectPoints = TRUE  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2, label="Mean"  )
text<-c("Average Temperature")
legend("right",text,col="#c0d630",lty=1,ncol=1,cex=0.7,lwd=2)
legend("right",text,col="#c0d630",lty=1,ncol=1,cex=0.65,lwd=2)
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  useSmoothScatter = TRUE, connectPoints = TRUE  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2, label="Mean"  )
text<-c("Average Temperature")
legend("right",text,col="#c0d630",lty=1,ncol=1,cex=0.65,lwd=2)
title("Plot of Temperature")
legend("right",text,col="#c0d630",lty=1,ncol=1,cex=0.6,lwd=2.5)
plot.ts(window(ts.temp, start=2014, end=2015), type="b", xlab="Date", ylab= "Temperatures",  useSmoothScatter = TRUE, connectPoints = TRUE  )
abline(h=mean(ts.temp), col='#c0d630', lwd=2.5, label="Mean"  )
text<-c("Average Temperature")
legend("right",text,col="#c0d630",lty=1,ncol=1,cex=0.6,lwd=2.5)
title("Plot of Temperature")
#What is your best estimative for the average temperature in June 2015 (six months from now on)
plot.ts(window(ts.temp, start=2014, end=2015),type="b",xlab="Date",ylab="Temperatures", xlim=c(2014,2017))
abline(h=ts.temp, col="red") # the mean value of the time series
abline(h=mean(ts.temp), col="red") # the mean value of the time series
#What is your best estimative for the average temperature in June 2015 (six months from now on)
plot.ts(window(ts.temp, start=2014, end=2015),type="b",xlab="Date",ylab="Temperatures", xlim=c(2014,2016)) #Plot graph from 2014 to 2016
abline(h=mean(ts.temp), col="red") # the mean value of the time series
??snaive
lines(snaive(window(ts.temp, start = 2014, end = 2015),h=18),col=4,lwd=3) #this calculates and plot the next 18 forecast months
$mean
lines(snaive(window(ts.temp, start = 2014, end = 2015),h=18)$mean,col=4,lwd=3) #this calculates and plot the next 18 forecast months
lines(snaive(window(ts.temp, start = 2014, end = 2015),h=18),col=4,lwd=3) #this calculates and plot the next 18 forecast months
lines(snaive(window(ts.temp, start = 2014, end = 2015),h=18) col=4,lwd=3) #this calculates and plot the next 18 forecast months
lines(snaive(window(ts.temp, start = 2014, end = 2015),h=18), col=4,lwd=3) #this calculates and plot the next 18 forecast months
lines(snaive(window(ts.temp, start=2013, end=2017) h = 18) )
lines(snaive(window(ts.temp, start=2013, end=2017) h = 18))
lines(snaive(window(ts.temp, start=2013, end=2017) h=18))
lines(snaive(window(ts.temp, start=2013, end=2017), h=18))
lines(snaive(window(ts.temp, start=2013, end=2017), h=18) $mean)
lines(snaive(window(ts.temp, start=2013, end=2017), h=18) $median)
lines(snaive(window(ts.temp, start=2013, end=2017), h=18) $mean)
lines(snaive(window(ts.temp, start=2013, end=2017), h=18) $max)
lines(snaive(window(ts.temp, start=2013, end=2017), h=18) )
lines(snaive(window(ts.temp, start=2013, end=2017), h=18) $mean )
lines(snaive(window(ts.temp, start=2013, end=2017), h=18) ts.temp$mean )
lines(snaive(window(ts.temp, start=2013, end=2017), h=18) $mean )
lines(snaive(window(ts.temp, start=2013, end=2017), h=18) $mean, col=4 )
lines(snaive(window(ts.temp, start=2013, end=2017), h=18) $mean, col=2 )
#What is your best estimative for the average temperature in June 2015 (six months from now on)
plot.ts(window(ts.temp, start=2014, end=2015),type="b",xlab="Date",ylab="Temperatures", xlim=c(2014,2016)) #Plot graph from 2014 to 2016
abline(h=mean(ts.temp), col='#c0d630', lwd=2.5, label="Mean") # the mean value of the time series (as before)
lines(snaive(window(ts.temp, start=2013, end=2017), h=18) $mean, col=2 )
lines(snaive(window(ts.temp, start=2014, end=2017), h=18) $mean, col=2 )
#What is your best estimative for the average temperature in June 2015 (six months from now on)
plot.ts(window(ts.temp, start=2014, end=2015),type="b",xlab="Date",ylab="Temperatures", xlim=c(2014,2016)) #Plot graph from 2014 to 2016
abline(h=mean(ts.temp), col='#c0d630', lwd=2.5, label="Mean") # the mean value of the time series (as before)
lines(snaive(window(ts.temp, start=2014, end=2017), h=18) $mean, col=2 )
lines(snaive(window(ts.temp, start=2014, end=2017), h=18) $mean, col=4 )
#What is your best estimative for the average temperature in June 2015 (six months from now on)
plot.ts(window(ts.temp, start=2014, end=2015),type="b",xlab="Date",ylab="Temperatures", xlim=c(2014,2016)) #Plot graph from 2014 to 2016
abline(h=mean(ts.temp), col='#c0d630', lwd=2.5, label="Mean") # the mean value of the time series (as before)
lines(snaive(window(ts.temp, start=2014, end=2017), h=18) $mean, col=4 )
#What is your best estimative for the average temperature in June 2015 (six months from now on)
plot.ts(window(ts.temp, start=2014, end=2015),type="b",xlab="Date",ylab="Temperatures", xlim=c(2014,2016)) #Plot graph from 2014 to 2016
abline(h=mean(ts.temp), col='#c0d630', lwd=2.5, label="Mean") # the mean value of the time series (as before)
lines(snaive(window(ts.temp, start=2014, end=2016), h=18) $mean, col=4 )
#What is your best estimative for the average temperature in June 2015 (six months from now on)
plot.ts(window(ts.temp, start=2014, end=2015),type="b",xlab="Date",ylab="Temperatures", xlim=c(2014,2016)) #Plot graph from 2014 to 2016
abline(h=mean(ts.temp), col='#c0d630', lwd=2.5, label="Mean") # the mean value of the time series (as before)
lines(snaive(window(ts.temp, start=2014, end=2015), h=18) $mean, col=4 ) #this calculates and plot the next 18 forecast months
lines(snaive(window(ts.temp, start=2014, end=2015), h=18) $mean, col=4, lwd=2 ) #this calculates and plot the next 18 forecast months
lines(snaive(window(ts.temp, start=2014, end=2015), h=18) $mean, col=3, lwd=2 ) #this calculates and plot the next 18 forecast months
#What is your best estimative for the average temperature in June 2015 (six months from now on)
plot.ts(window(ts.temp, start=2014, end=2015),type="b",xlab="Date",ylab="Temperatures", xlim=c(2014,2016)) #Plot graph from 2014 to 2016
abline(h=mean(ts.temp), col='#c0d630', lwd=2.5, label="Mean") # the mean value of the time series (as before)
lines(snaive(window(ts.temp, start=2014, end=2015), h=18) $mean, col=3, lwd=2 ) #this calculates and plot the next 18 forecast months
lines(snaive(window(ts.temp, start=2014, end=2015), h=18) $mean, col="darkgrey", lwd=2 ) #this calculates and plot the next 18 forecast months
lines(snaive(window(ts.temp, start=2014, end=2015), h=18) $mean, col="darkgrey", lwd=3 ) #this calculates and plot the next 18 forecast months
text<-c("Seasonal naive method")
legend("center",text,col=4,lty=1,ncol=1,cex=0.8,lwd=3)
text1<-c("Average Temperature")
rm(text1)
legend("right",text,col="darkgrey",lty=1,ncol=1,cex=0.8,lwd=3)
legend("topright",text,col="darkgrey",lty=1,ncol=1,cex=0.8,lwd=3)
legend("bottomright",text,col="darkgrey",lty=1,ncol=1,cex=0.8,lwd=3)
#What is your best estimative for the average temperature in June 2015 (six months from now on)
plot.ts(window(ts.temp, start=2014, end=2015),type="b",xlab="Date",ylab="Temperatures", xlim=c(2014,2016)) #Plot graph from 2014 to 2016
abline(h=mean(ts.temp), col='#c0d630', lwd=2.5, label="Mean") # the mean value of the time series (as before)
lines(snaive(window(ts.temp, start=2014, end=2015), h=18) $mean, col="darkgrey", lwd=3 ) #this calculates and plot the next 18 forecast months
text<-c("Seasonal naive method")
legend("bottomright",text,col="darkgrey",lty=1,ncol=1,cex=0.8,lwd=3)
legend("topright",text,col="darkgrey",lty=1,ncol=1,cex=0.4,lwd=3)
legend("topright",text,col="darkgrey",lty=1,ncol=1,cex=0.5,lwd=3)
legend("right",text,col="darkgrey",lty=1,ncol=1,cex=0.5,lwd=3)
legend("centerright",text,col="darkgrey",lty=1,ncol=1,cex=0.5,lwd=3)
legend("right",text,col="darkgrey",lty=1,ncol=1,cex=0.5,lwd=3)
legend("center", inset= 0.05, text,col="darkgrey",lty=1,ncol=1,cex=0.5,lwd=3)
legend("topcenter", inset= 0.05, text,col="darkgrey",lty=1,ncol=1,cex=0.5,lwd=3)
legend("topcenter", inset= .05, text,col="darkgrey",lty=1,ncol=1,cex=0.5,lwd=3)
legend("top", inset= .05, text,col="darkgrey",lty=1,ncol=1,cex=0.5,lwd=3)
legend("top", inset= .3, text,col="darkgrey",lty=1,ncol=1,cex=0.5,lwd=3)
legend("top", inset= .2, text,col="darkgrey",lty=1,ncol=1,cex=0.5,lwd=3)
#What is your best estimative for the average temperature in June 2015 (six months from now on)
plot.ts(window(ts.temp, start=2014, end=2015),type="b",xlab="Date",ylab="Temperatures", xlim=c(2014,2016)) #Plot graph from 2014 to 2016
abline(h=mean(ts.temp), col='#c0d630', lwd=2.5, label="Mean") # the mean value of the time series (as before)
lines(snaive(window(ts.temp, start=2014, end=2015), h=18) $mean, col="darkgrey", lwd=3 ) #this calculates and plot the next 18 forecast months
text<-c("Seasonal naive method")
legend("top", inset= .2, text,col="darkgrey",lty=1,ncol=1,cex=0.5,lwd=3)
legend("top", inset= .2, text,col="darkgrey",lty=1,ncol=1,cex=0.6,lwd=3)
library(fma)
plot.ts(window(elec, start=1956, end=1995), type='a', xlab="Date", ylab="Australian Monthly Electricity Production"
plot.ts(window(elec, start=1956, end=1995), type="a", xlab="Date", ylab="Australian Monthly Electricity Production"
plot.ts(window(elec, start=1956, end=1995), type="a", xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), type="c", xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), type="e", xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), type="f", xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), plot.type = c("multiple", "single"), xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), plot.type = "single", xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), plot.type = "multiple", xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), plot.type = "b", xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), plot.type =c ("single", "multiple"), xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), plot.type=c("single", "multiple"), xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), type="p", xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), type="l", xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), type="c", xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), type="o", xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), type="o", xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), type="h", xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), type="n", xlab="Date", ylab="Australian Monthly Electricity Production")
plot.ts(window(elec, start=1956, end=1995), type="o", xlab="Date", ylab="Australian Monthly Electricity Production")
ts.temp$col <- rbPal(10)[as.numeric(cut(ts.temp, breaks=10))]
rbPal <- colorRampPalette(c('yellow','red'))
ts.temp$col <- rbPal(10)[as.numeric(cut(ts.temp, breaks=10))]
plot.ts(window(elec, start=1956, end=1995), type="o", xlab="Date", ylab="Australian Monthly Electricity Production", col=ts.temp$col)
ts.temp$col <- rbPal(10)[as.numeric(cut(ts.temp, breaks=100))]
plot.ts(window(elec, start=1956, end=1995), type="o", xlab="Date", ylab="Australian Monthly Electricity Production", col=ts.temp$col)
rbPal <- colorRampPalette(c('yellow','red'))
ts.temp$col <- rbPal(10)[as.numeric(cut(ts.temp, breaks=100))]
plot.ts(window(elec, start=1956, end=1995), type="o", xlab="Date", ylab="Australian Monthly Electricity Production", col=ts.temp$col)
ts.temp$col <- rbPal(n = 1)[as.numeric(cut(ts.temp, breaks=100))]
plot.ts(window(elec, start=1956, end=1995), type="o", xlab="Date", ylab="Australian Monthly Electricity Production", col=ts.temp$col)
ts.temp$col <- rbPal(n = 1)[as.numeric(cut(ts.temp, breaks=1))]
plot.ts(window(elec, start=1956, end=1995), type="o", xlab="Date", ylab="Australian Monthly Electricity Production", col=ts.temp$col)
rbPal <- colorRampPalette(c('yellow','red'))
ts.temp$col <- rbPal(n = 1)[as.numeric(cut(ts.temp, breaks=1))]
plot.ts(window(elec, start=1956, end=1995), type="o", xlab="Date", ylab="Australian Monthly Electricity Production", col=ts.temp$col)
View(ts.temp)
View(temp)
ts.temp$col <- rbPal(n = 1)[as.numeric(cut(temp, breaks=1000))]
plot.ts(window(elec, start=1956, end=1995), type="o", xlab="Date", ylab="Australian Monthly Electricity Production", col=ts.temp$col)
rbPal <- colorRampPalette(c('yellow','red'))
ts.temp$col <- rbPal(n = 1)[as.numeric(cut(temp, breaks=1000))]
plot.ts(window(elec, start=1956, end=1995), type="o", xlab="Date", ylab="Australian Monthly Electricity Production", col=ts.temp$col)
rbPal <- colorRampPalette(c('yellow','red'))
temp$col <- rbPal(n = 1)[as.numeric(cut(temp, breaks=1000))]
plot.ts(window(elec, start=1956, end=1995), type="o", xlab="Date", ylab="Australian Monthly Electricity Production", col=temp$col)
View(temp)
temp<-c(7.6,7.1,8.3,11.5,13.7,17.2,18.5,19.7,15.1,8.9,8.5,8.5,7.7,6.9,6.1,10.5,12.9)
rbPal <- colorRampPalette(c('yellow','red'))
temp$col <- rbPal(n = 1)[as.numeric(cut(temp, breaks=1000))]
plot.ts(window(elec, start=1956, end=1995), type="o", xlab="Date", ylab="Australian Monthly Electricity Production", col=temp$col)
plot.ts(window(elec, start=1956, end=1995), type="o", xlab="Date", ylab="Australian Monthly Electricity Production", + scale_colour_gradient(low="red", high="blue"))
rbPal <- colorRampPalette(c('yellow','red'))
temp$col <- rbPal(10)[as.numeric(cut(temp, breaks=1000))]
plot.ts(window(elec, start=1956, end=1995), type="o", xlab="Date", ylab="Australian Monthly Electricity Production", "))
plot.ts(window(elec, start=1956, end=1995), type="o", xlab="Date", ylab="Australian Monthly Electricity Production", col=temp$col))
plot.ts(window(elec, start=1956, end=1995), type="o", xlab="Date", ylab="Australian Monthly Electricity Production", col=temp$col)
rbPal <- colorRampPalette(c('yellow','red'))
temp$col <- rbPal(10)[as.numeric(cut(temp, breaks=1000))]
plot.ts(window(elec, start=1956, end=1995), type="o", xlab="Date", ylab="Australian Monthly Electricity Production", col=temp$col)
rbPal <- colorRampPalette(c('yellow','red'))
temp$col <- rbPal(10)[as.numeric(cut(temp, breaks=1000))]
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production", col=temp$col)
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production")
View(elec)
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production", col=rbPal(5)[findInterval(elec, seq(2:10))] )
library(fma)
View(elec)
rbPal <- colorRampPalette(c('yellow','red'))
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production", col=rbPal(5)[findInterval(elec, seq(2:10))] )
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production", col=rbPal(5)[findInterval(elec, seq(2:6))] )
rbPal <- colorRampPalette(c('yellow','red'))
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production", col=rbPal(5)[findInterval(elec, seq(2:6))] )
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production", col=rbPal(5)[findInterval(elec, seq(1:5))] )
rbPal <- colorRampPalette(c('yellow','red'))
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production", col=rbPal(5)[findInterval(elec, seq(1:5))] )
colfunction<- scale_colour_gradientn(colours=c("red", "blue"))
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production", col=colfunction)] )
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production", col=colfunction)
colfunc <- colorRampPalette(c("black", "white"))
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production", col=colfunc(10))
colfunc <- colorRampPalette(c("black", "white"))
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production", col=colfunc(10))
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production", col=colfunc(20))
colfunc <- colorRampPalette(c("black", "white"))
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production", col=colfunc(20))
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production", col=(colfunc(20)))
colfunc<-colorRampPalette(c("red","yellow","springgreen","royalblue"))
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production", col=(colfunc(20)))
rm(colfunc, rbPal)
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production", col='#c0d630' ))
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production", col="#c0d630"))
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production", col="#c0d630")
#Monthly total of people on unemployed benefits in Australia (January 1956 to July 1992) (dole):
plot.ts(window(dole, start=1956, end=1992), type="h")
monthplot(elec,ylab="Australian monthly electricity production",xlab="Month",xaxt="n",
main="Seasonal deviation plot: Australian monthly electricity production")
axis(1,at=1:12,labels=month.abb,cex=0.8)
axis(1,at=1:12,labels=month.name,cex=0.8)
monthplot(elec,ylab="Australian monthly electricity production",xlab="Month",xaxt="n",
main="Seasonal deviation plot: Australian monthly electricity production")
axis(1,at=1:12,labels=month.name,cex=0.8)
#Monthly total of people on unemployed benefits in Australia (January 1956 to July 1992) (dole):
plot.ts(window(dole, start=1956, end=1992), type="h")
monthplot(elec,ylab="Australian monthly electricity production",xlab="Month",xaxt="n",
main="Seasonal deviation plot: Australian monthly electricity production")
axis(1,at=1:12,labels=month.name,cex=0.8)
axis(1,at=1:12,labels=month.abb,cex=0.5)
plot.ts(window(elec, start=1956, end=1995), type="b", xlab="Date", ylab="Australian Monthly Electricity Production", col="#c0d630")
monthplot(elec,ylab="Australian monthly electricity production",xlab="Month",xaxt="n",
main="Seasonal deviation plot: Australian monthly electricity production")
axis(1,at=1:12,labels=month.abb,cex=0.5)
axis(1,at=1:12,labels=month.abb,cex=0.3)
monthplot(elec,ylab="Australian monthly electricity production",xlab="Month",xaxt="n",
main="Seasonal deviation plot: Australian monthly electricity production")
axis(1,at=1:12,labels=month.abb,cex=0.3)
monthplot(elec,ylab="Australian monthly electricity production",xlab="Month",xaxt="n",
main="Seasonal deviation plot: Australian monthly electricity production")
axis(1,at=1:12,labels=month.abb,cex=0.3)
monthplot(elec,ylab="Australian monthly electricity production",xlab="Month",xaxt=s ,
main="Seasonal deviation plot: Australian monthly electricity production")
monthplot(elec,ylab="Australian monthly electricity production",xlab="Month",xaxt="s"
main="Seasonal deviation plot: Australian monthly electricity production")
axis(1,at=1:12,labels=month.abb,cex=0.3)
monthplot(elec,ylab="Australian monthly electricity production",xlab="Month",xaxt="n"
main="Seasonal deviation plot: Australian monthly electricity production")
axis(1,at=1:12,labels=month.abb,cex=0.3)
monthplot(elec,ylab="Australian monthly electricity production",xlab="Month",xaxt="n",
main="Seasonal deviation plot: Australian monthly electricity production")
axis(1,at=1:12,labels=month.abb,cex=0.3)
monthplot(elec,ylab="Australian monthly electricity production",xlab="Month",xaxt="n",
main="Seasonal deviation plot: Australian monthly electricity production")
monthplot(elec,ylab="Australian monthly electricity production",xlab="Month",xaxt="s",
main="Seasonal deviation plot: Australian monthly electricity production")
monthplot(elec,ylab="Australian monthly electricity production",xlab="Month",xaxt="1",
main="Seasonal deviation plot: Australian monthly electricity production")
monthplot(elec,ylab="Australian monthly electricity production",xlab="Month",xaxt="2",
main="Seasonal deviation plot: Australian monthly electricity production")
axis(1,at=1:12,labels=month.abb,cex=0.3)
monthplot(elec,ylab="Australian monthly electricity production",xlab="Month",xaxt="s",
main="Seasonal deviation plot: Australian monthly electricity production")
axis(1,at=1:12,labels=month.abb,cex=0.3)
monthplot(elec,ylab="Australian monthly electricity production",xlab="Month",xaxt="n",
main="Seasonal deviation plot: Australian monthly electricity production")
axis(1,at=1:12,labels=month.abb,cex=0.3)
monthplot(elec,ylab="Australian monthly electricity production",xlab="Month",xaxt="t",
main="Seasonal deviation plot: Australian monthly electricity production")
axis(1,at=1:12,labels=month.abb,cex=0.3)
axis(1,at=1:12,labels=month.abb,cex=0.2)
monthplot(elec,ylab="Australian monthly electricity production",xlab="Month",xaxt="t",
main="Seasonal deviation plot: Australian monthly electricity production")
axis(1,at=1:12,labels=month.abb,cex=0.2)
monthplot(elec,ylab="Australian monthly electricity production",xlab="Month",xaxt="n",
main="Seasonal deviation plot: Australian monthly electricity production")
axis(1,at=1:12,labels=month.abb,cex=0.2)
#Monthly total of people on unemployed benefits in Australia (January 1956 to July 1992) (dole):
plot.ts(window(dole, start=1956, end=1992), type="h")
#Monthly total of people on unemployed benefits in Australia (January 1956 to July 1992) (dole):
plot.ts(window(dole, start=1956, end=1992), type="h", col='#c0d630')
